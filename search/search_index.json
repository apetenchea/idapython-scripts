{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"IDAPython Scripts","text":"<p>A growing collection of bite-sized IDAPython scripts and examples for automating and extending IDA Pro. Currently work in progress, but feel free to contribute or suggest new ideas!</p>"},{"location":"core/enumerate_segments/","title":"Enumerate Segments","text":"<p>Walks all segments in the loaded database, printing each segment\u2019s name, start/end addresses, and permissions.</p> <pre><code>import sys\n\nimport ida_auto\nimport ida_pro\nimport idaapi\nimport idautils\nimport idc\n\n\ndef format_perms(perm):\n    \"\"\"\n    Turn the segment permission bits into an R/W/X string.\n    \"\"\"\n    return \"\".join([\n        \"R\" if perm &amp; idaapi.SEGPERM_READ else \"-\",\n        \"W\" if perm &amp; idaapi.SEGPERM_WRITE else \"-\",\n        \"X\" if perm &amp; idaapi.SEGPERM_EXEC else \"-\"\n    ])\n\n\ndef main(output):\n    # Wait for the auto-analysis to finish\n    ida_auto.auto_wait()\n\n    # Iterate over all segments\n    for ea in idautils.Segments():\n        seg = idaapi.getseg(ea)\n        name = idc.get_segm_name(ea)\n        start = seg.start_ea\n        end = seg.end_ea\n        perms = format_perms(seg.perm)\n        print(f\"{name}: {hex(start)} - {hex(end)} ({perms})\", file=output)\n\n\nif __name__ == \"__main__\":\n    if len(idc.ARGV) &gt; 1:\n        with open(idc.ARGV[1], \"w\") as f:\n            main(f)\n            f.flush()\n    else:\n        main(sys.stdout)\n    ida_pro.qexit(0)\n</code></pre>"}]}